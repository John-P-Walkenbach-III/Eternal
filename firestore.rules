rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {


        // Add this block for testimonies
    match /testimonies/{testimonyId} {
      // Allow any authenticated user to read testimonies
      allow read: if request.auth != null;
      // Allow authenticated users to update the likeCount
      allow update: if request.auth != null && (
        request.resource.data.likeCount == resource.data.likeCount + 1 ||
        request.resource.data.likeCount == resource.data.likeCount - 1
      );

      // Rules for the 'likes' subcollection
      match /likes/{userId} {
        allow read, write: if request.auth.uid == userId;
      }
    }


        // Add this block for testimonies
    match /testimonies/{testimonyId} {
      // Allow any authenticated user to read testimonies
      allow read: if request.auth != null;
      // Allow authenticated users to update the likeCount
      allow update: if request.auth != null && request.resource.data.likeCount == resource.data.likeCount + 1 || request.resource.data.likeCount == resource.data.likeCount - 1;

      // Rules for the 'likes' subcollection
      match /likes/{userId} {
        allow read, write: if request.auth.uid == userId;
      }
    }


        // Add this block inside the main match /databases/{database}/documents { ... }
    match /quizScores/{scoreId} {
      // A user can read a score document if their UID matches the userId in that document.
      allow read: if request.auth.uid == resource.data.userId;

      // A user can create or update a score document if their UID matches the userId they are trying to save.
      allow write: if request.auth.uid == request.resource.data.userId;
    }


    // Default rule: Deny all reads/writes unless a specific rule allows it.
    match /{document=**} { allow read, write: if false; }

        // DEVOTIONAL COMMENTS (sub-collection): Authenticated users can read/create.
    // Admin can delete any comment.
    match /devotionals/{devotionalId}/comments/{commentId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == request.resource.data.userId;
      allow delete: if request.auth.uid == 'NTTcLOW3mGVko5K0BhOciM4eEYw2';
    }

        // Add this block for devotional likes
        // This rule allows reading of verse data and secure updates for likes.
    match /devotionals/{verseId} {
      // Allow any authenticated user to read the verse data (like count, text, etc.)
      allow read: if request.auth != null;
      // Allow authenticated users to create/update documents (for the transaction)
      allow write: if request.auth != null;

      // Keep the specific rule for the likes subcollection
      match /likes/{userId} {
        allow read, write: if request.auth.uid == userId;
      }
    }




    // --- USER-SPECIFIC DATA ---

    // USERS collection: A user can read/write their own document.
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId;
    }

     match /users/{userId}/journalEntries/{entryId} {
      allow read, write: if request.auth.uid == userId;
    }

       // Rule for public contact page messages.
    // Goal: Anyone can submit a message, but no one can see other messages.
    match /messages/{messageId} {
      allow read, update, delete: if false;

      // Allow creation if the new message has the correct fields and format.
      allow create: if request.resource.data.name is string
                      && request.resource.data.email is string
                      && request.resource.data.message is string
                      && request.resource.data.message.size() < 2000;
    }

       // LEADERBOARD: Anyone can read. Authenticated users can write their own scores.
    // Admin can delete any score.
    match /leaderboard/{scoreId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow delete: if request.auth.uid == 'NTTcLOW3mGVko5K0BhOciM4eEYw2';
    }



    // --- PUBLIC & SHARED DATA ---

    // TESTIMONIES: Anyone can read. Authenticated users can create their own.
    match /testimonies/{testimonyId} {
      allow read: if true;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }

    // CONTACTS: Allow anyone to submit a contact form message.
    match /contacts/{contactId} {
      allow create: if true;
    }


        // --- RE-ENTRY RESOURCE PAGES ---
    // Allow any authenticated user to read.
    // Allow the admin to perform all write operations (create, update, delete).
    match /housingResources/{docId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == 'NTTcLOW3mGVko5K0BhOciM4eEYw2';
    }
    match /employmentResources/{docId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == 'NTTcLOW3mGVko5K0BhOciM4eEYw2';
    }
    match /counselingResources/{docId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == 'NTTcLOW3mGVko5K0BhOciM4eEYw2';
    }
    match /spiritualResources/{docId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == 'NTTcLOW3mGVko5K0BhOciM4eEYw2';
    }

       // TESTIMONIES: Anyone can read. Authenticated users can create their own.
    // Admin can update (approve) and delete any testimony.
    match /testimonies/{testimonyId} {
      allow read: if true;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow update, delete: if request.auth.uid == 'NTTcLOW3mGVko5K0BhOciM4eEYw2';
    }

        // DEVOTIONALS: Admin can write, authenticated users can read.
    match /devotionals/{devotionalId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == 'NTTcLOW3mGVko5K0BhOciM4eEYw2';
    }

        // USER RATINGS (sub-collection): A user can create/read their own ratings.
    match /users/{userId}/ratings/{ratingId} {
      allow read, create: if request.auth.uid == userId;
    }

        // --- RE-ENTRY RESOURCE PAGES ---
    // Allow any authenticated user to read.
    // Allow the admin to perform all write operations (create, update, delete).
    // Allow authenticated users to update ONLY the rating fields.
    match /housingResources/{docId} {
      allow read: if request.auth != null;
      allow create, delete: if request.auth.uid == 'NTTcLOW3mGVko5K0BhOciM4eEYw2';
      allow update: if request.auth.uid == 'NTTcLOW3mGVko5K0BhOciM4eEYw2' || 
                      (request.auth != null && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['rating', 'ratingCount']));
    }
    match /employmentResources/{docId} {
      allow read: if request.auth != null;
      allow create, delete: if request.auth.uid == 'NTTcLOW3mGVko5K0BhOciM4eEYw2';
      allow update: if request.auth.uid == 'NTTcLOW3mGVko5K0BhOciM4eEYw2' || 
                      (request.auth != null && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['rating', 'ratingCount']));
    }
    match /counselingResources/{docId} {
      allow read: if request.auth != null;
      allow create, delete: if request.auth.uid == 'NTTcLOW3mGVko5K0BhOciM4eEYw2';
      allow update: if request.auth.uid == 'NTTcLOW3mGVko5K0BhOciM4eEYw2' || 
                      (request.auth != null && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['rating', 'ratingCount']));
    }
    match /spiritualResources/{docId} {
      allow read: if request.auth != null;
      allow create, delete: if request.auth.uid == 'NTTcLOW3mGVko5K0BhOciM4eEYw2';
      allow update: if request.auth.uid == 'NTTcLOW3mGVko5K0BhOciM4eEYw2' || 
                      (request.auth != null && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['rating', 'ratingCount']));
    }

        // USER LIKES (sub-collection): A user can create/read their own likes.
    match /users/{userId}/likes/{likeId} {
      allow read, create: if request.auth.uid == userId;
    }


        // DEVOTIONALS: Admin can write. Authenticated users can read and update likeCount.
    match /devotionals/{devotionalId} {
      allow read: if request.auth != null;
      allow create, delete: if request.auth.uid == 'NTTcLOW3mGVko5K0BhOciM4eEYw2';
      allow update: if request.auth.uid == 'NTTcLOW3mGVko5K0BhOciM4eEYw2' ||
                      (request.auth != null && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['likeCount']));
    }




    // --- RE-ENTRY RESOURCE PAGES ---
    // Allow any authenticated user to read documents from these collections.
    match /housingResources/{docId} { allow read: if request.auth != null; }
    match /employmentResources/{docId} { allow read: if request.auth != null; }
    match /counselingResources/{docId} { allow read: if request.auth != null; }
    match /spiritualResources/{docId} { allow read: if request.auth != null; }
  }
}